import { useEffect, useState } from "react"
import { isMobile } from "react-device-detect"
import { FluxoDeCaixaTable } from "../../components/FluxoDeCaixaTable"
import Head from "next/head"
import { SelectData } from "../../components/selectData"
import { month, year } from "../../services/date"
import { Content } from "../../components/content"
import { PaginationComponent } from "../../components/PaginationComponent"
import { EmpresaProvider } from "../../context/empresaContext"
import { AuthProvider } from "../../context"

export default function FluxoCaixa() {

    const [hiddenDrawer, setHiddenDrawer] = useState('hidden')
    const [mobile, setMobile] = useState()
    const [data, setData] = useState(`${year}-${month}`)
    const [ultimaPagina, setUltimaPagina] = useState(12);
    const [pageAtual, setPageAtual] = useState(1);

    const selectedData = (dataselecionada) => {
        setData(dataselecionada)
    }

    console.log(data)

    useEffect(() => {
        if (isMobile) {
            setHiddenDrawer('hidden')
        } else {
            setHiddenDrawer('absolute lg:relative')
        }
    }, [mobile])

    return (
        <AuthProvider>
            <EmpresaProvider>
                <Head>
                    <title>APPLoja Web | Fluxo de Caixa</title>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>

                <Content>
                    <h1 className='font-bold mt-4 text-3xl'>Fluxo de Caixa</h1>

                    {/*adicionar uma area de resumo de caixa.*/}
                    <SelectData
                        dataSelecionada={selectedData}
                    />
                    <FluxoDeCaixaTable
                        dataInformada={data}
                        paginaAtual={pageAtual}
                        setPaginaAtual={setPageAtual}
                        ultimaPagina={ultimaPagina}
                        setUltimaPagina={setUltimaPagina}
                    />
                    <PaginationComponent
                        totalPages={ultimaPagina}
                        paginaAtual={setPageAtual}
                    />
                </Content>
            </EmpresaProvider>
        </AuthProvider>
    )
}