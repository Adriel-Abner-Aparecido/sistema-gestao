import Head from 'next/head'
import { useEffect, useState } from 'react'
import { Drawer } from '../../components/Drawer'
import { Header } from '../../components/Header'
import { isMobile } from 'react-device-detect';
import { ProviderModal } from '../../components/ProviderModal'
import { ProviderTable } from '../../components/ProviderTable'
import { PromocaoComponent } from '../../components/PromocaoComponent';
import { PaginationComponent } from '../../components/PaginationComponent';
import { Content } from '../../components/content';
import { AuthProvider } from '../../context';
import { EmpresaProvider } from '../../context/empresaContext';

export default function Fornecedores() {
    const [statusModal, setStatusModal] = useState("hidden")
    const [fornecedorSelecionado, setFornecedorSelecionado] = useState(null);
    const [hiddenDrawer, setHiddenDrawer] = useState('hidden')
    const [mobile, setMobile] = useState()
    const [atualizar, setAtualizar] = useState(false)
    const [ultimaPagina, setUltimaPagina] = useState(1);
    const [pageAtual, setPageAtual] = useState(1);

    useEffect(() => {
        if (isMobile) {
            setHiddenDrawer('hidden')
        } else {
            setHiddenDrawer('absolute lg:relative')
        }
    }, [mobile])

    return (
        <AuthProvider>
            <EmpresaProvider>
                <Head>
                    <title>APPLoja Web | Fornecedores</title>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>

                <Content>
                    <h1 className='font-bold mt-4 text-3xl'>Fornecedores</h1>
                    <ProviderTable
                        lastPage={setUltimaPagina}
                        atualPagina={pageAtual}
                        statusModal={statusModal}
                        setStatusModal={setStatusModal}
                        fornecedorSelecionado={fornecedorSelecionado}
                        setFornecedorSelecionado={setFornecedorSelecionado}
                        atualizar={atualizar}
                        setAtualizar={setAtualizar}
                    />
                    <ProviderModal
                        statusModal={statusModal}
                        setStatusModal={setStatusModal}
                        fornecedorSelecionado={fornecedorSelecionado}
                        setFornecedorSelecionado={setFornecedorSelecionado}
                        atualizar={atualizar}
                        setAtualizar={setAtualizar}
                    />
                    <PaginationComponent
                        totalPages={ultimaPagina}
                        paginaAtual={setPageAtual}
                    />
                </Content>
            </EmpresaProvider>
        </AuthProvider>
    )
}