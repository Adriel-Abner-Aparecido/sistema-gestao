import Head from 'next/head'
import { useEffect, useState } from 'react'
import { isMobile } from 'react-device-detect';
import { Header } from '../../components/Header';
import { Drawer } from '../../components/Drawer';
import { UserTable } from '../../components/UserTable';
import { UserModal } from '../../components/UserModal';
import { PromocaoComponent } from '../../components/PromocaoComponent';
import { Content } from '../../components/content';
import { EmpresaProvider } from '../../context/empresaContext';
import { AuthProvider } from '../../context';

export default function Usuarios() {

  const [hiddenDrawer, setHiddenDrawer] = useState('hidden')
  const [hiddenUserModal, setHiddenUserModal] = useState('hidden')
  const [userSelecionado, setUserSelecionado] = useState(null);
  const [atualizar, setAtualizar] = useState(false)
  const [mobile, setMobile] = useState()

  useEffect(() => {
    if (isMobile) {
      setHiddenDrawer('hidden')
    } else {
      setHiddenDrawer('absolute lg:relative')
    }
  }, [mobile])

  return (
    <AuthProvider>
      <EmpresaProvider>
        <Head>
          <title>APPLoja Web | Usuários</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <Content>
          <h1 className='font-bold mt-4 text-3xl'>Usuários</h1>
          <UserTable
            hiddenUserModal={hiddenUserModal}
            setHiddenUserModal={setHiddenUserModal}
            userSelecionado={userSelecionado}
            setUserSelecionado={setUserSelecionado}
            atualizar={atualizar}
            setAtualizar={setAtualizar}
          />
          <UserModal
            hiddenUserModal={hiddenUserModal}
            setHiddenUserModal={setHiddenUserModal}
            userSelecionado={userSelecionado}
            setUserSelecionado={setUserSelecionado}
            atualizar={atualizar}
            setAtualizar={setAtualizar}
          />
        </Content>
      </EmpresaProvider>
    </AuthProvider>
  )
}
